services:
  data-crawlers:
    image: "pharmassist-data-crawlers"
    container_name: pharmassist-data-crawlers
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: .docker/Dockerfile.data_crawlers
    env_file:
      - .env
    ports:
      - "9010:8080"

  mq:
    image: rabbitmq:3-management-alpine
    container_name: pharmassist-mq
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    restart: always

  data_cdc:
    image: "pharmassist-data-cdc"
    container_name: pharmassist-data-cdc
    build:
      context: .
      dockerfile: .docker/Dockerfile.data_cdc
    env_file:
      - .env
    depends_on:
      - mq

  # qdrant:
  #   image: qdrant/qdrant:latest
  #   container_name: pharmassist-qdrant
  #   ports:
  #     - "6333:6333"
  #     - "6334:6334"
  #   expose:
  #     - "6333"
  #     - "6334"
  #     - "6335"
  #   volumes:
  #     - ./qdrant-data:/qdrant_data
  #   restart: always

  feature_pipeline:
    image: "pharmassist-feature-pipeline"
    container_name: pharmassist-feature-pipeline
    build:
      context: .
      dockerfile: .docker/Dockerfile.feature_pipeline
    environment:
      BYTEWAX_PYTHON_FILE_PATH: "main:flow"
      DEBUG: "false"
      BYTEWAX_KEEP_CONTAINER_ALIVE: "false"
    env_file:
      - .env
    depends_on:
      - mq
    restart: always
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # inference_pipeline:
  #   image: "pharmassist-inference-pipeline"
  #   container_name: pharmassist-inference-pipeline
  #   build:
  #     context: .
  #     dockerfile: .docker/Dockerfile.inference_pipeline
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   env_file:
  #     - .env
